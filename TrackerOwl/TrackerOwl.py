import socket
import argparse

class PortScanner: 
    def __init__(self, ip_address, ports): 
        self.__ip_address = ip_address
        self.__ports = ports
    
    def __setup(self): 
        print('''
          _____                     _                                       _
          |_   _|                   | |                   ___               | |
            | |   _ __   __ _   ___ | | __  ___  _ __    / __ \  __      __ | |
            | |  | '__| / _` | / __|| |/ / / _ \| '__|  | /  \ | \ \ /\ / / | |
            | |  | |   | (_| || (__ |   < |  __/| |     | \__/ |  \ V  V /  | |
            |_|  |_|    \__,_| \___||_|\_\ \___||_|      \___ /    \_/\_/   |_|
                
                        ,---,                                   
                      .'  .' `\                             ,--/ /--|
                      /   ,     \                  __  ,-. ,--. :/   /
                    ,---.'       \               ,' ,'/ /| :  : ' / /
                  /   .  \  .--. |    ,--.--.  /  '  | |' | |  '  /
                  .   /  \  \__\/: .   /       \   |      ,' '     :
                .   ; ,. :\ ,' .--.; .--.  .-. |  '  :             :
              .   | |: : '/ /  \  /'   \__\/: . .  |  | '    '  : |. 
              '   | .; : ;  \  ;  ;   ," .--.; |  ;  : |    |  | ' \ 
              |   :    |  \ \  \  \  /  /  ,.  |  |  , ;    '  : |--'
              \   \  /   `----'   ` ;  :   .'   \  ---'\     ;  |,
                `----'              |  ,     .-./        \ __ / '--'
                                  `--`---'         

          ''')

        print("Bem-vindo ao Tracker Owl, um portscanner open source")

    def __split_ports(self, ports):
      return [int(port) for port in ports.split(",")]

    def initialize_scanner(self): 
        self.__setup()
        
        for port in self.__split_ports(self.__ports): 
            client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            client.settimeout(0.1)
            codigo = client.connect_ex((self.__ip_address, port))
            if codigo == 0:
                print(f"Porta {port} OPEN")
            else:
                print(f"Porta {port} CLOSED")

def main(args):
  try:
      port_scanner = PortScanner(args["ip"], args["ports"])
      port_scanner.initialize_scanner()
  except Exception as e: 
      raise e


if __name__ == "__main__":
    parser = argparse.ArgumentParser()

    parser.add_argument("-p", "--ports", type=str, required=True, help="Portas a serem escaneadas: Digite as portas separadas por vírgulas")
    parser.add_argument("-ip", "--ip", type=str, required=True, help="Host a ser escaneado: Digite o endereço IP no formato '192.168.0.1'")

    args = vars(parser.parse_args())

    main(args)
    